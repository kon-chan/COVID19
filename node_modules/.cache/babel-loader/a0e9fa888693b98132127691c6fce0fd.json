{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/Desktop/reactTest/my-app/src/components/events_show.js\";\nimport React, { Component } from 'react'; //import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { getEvent, deleteEvent, putEvent } from '../actions';\n\nclass EventsShow extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  renderField(field) {\n    const input = field.input,\n          label = field.label,\n          type = field.type,\n          _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, error));\n  }\n\n  async onDeleteClick() {\n    await this.props.deleteEvent(id);\n    this.props.history.push('/');\n  }\n\n  async onSubmit(values) {\n    // await this.props.postEvent(values);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          submitting = _this$props.submitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Title\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Body\",\n      name: \"body\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Link, {\n      to: \"/\",\n      onClick: this.onDeleteClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {}; //空ならば\n\n  if (!values.title) errors.title = \"Enter a title, Please\";\n  if (!values.body) errors.body = \"Enter a body, Please\";\n  return errors;\n}; //const mapDispatchToProps = ({ postEvent });\n\n\nexport default connect(null, null)(reduxForm({\n  validate,\n  form: 'eventShowForm'\n})(EventsShow));","map":{"version":3,"sources":["/Users/konchan/Desktop/reactTest/my-app/src/components/events_show.js"],"names":["React","Component","connect","Field","reduxForm","Link","getEvent","deleteEvent","putEvent","EventsShow","constructor","props","onSubmit","bind","onDeleteClick","renderField","field","input","label","type","meta","touched","error","id","history","push","values","render","handleSubmit","pristine","submitting","validate","errors","title","body","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\n\nimport { getEvent, deleteEvent, putEvent } from '../actions';\n\n\nclass EventsShow extends Component {\n  constructor(props){\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n\n  }\n  renderField(field) {\n    const { input, label, type, meta: { touched, error } } = field;\n\n    return (\n      <div>\n        <input {...input} placeholder={label} type={type}/>\n        {touched && error && <span>{error}</span>}\n      </div>\n    );\n  }\n\n  async onDeleteClick() {\n    await this.props.deleteEvent(id);\n    this.props.history.push('/');\n\n  }\n\n\n  async onSubmit(values) {\n    // await this.props.postEvent(values);\n    this.props.history.push('/');\n  }\n\n\n  render() {\n    const { handleSubmit, pristine, submitting } = this.props;\n    return(\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <div>\n          <Field label=\"Title\" name=\"title\" type=\"text\" component={this.renderField}/>\n        </div>\n        <div>\n          <Field label=\"Body\" name=\"body\" type=\"text\" component={this.renderField}/>\n        </div>\n\n        <div>\n          <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n          <Link to=\"/\" >Cancel</Link>\n          <Link to=\"/\" onClick={this.onDeleteClick}>Delete</Link>\n        </div>\n      </form>\n    );\n  }\n}\n\n\nconst validate = values => {\n  const errors = {};\n  //空ならば\n  if (!values.title) errors.title = \"Enter a title, Please\";\n  if (!values.body) errors.body = \"Enter a body, Please\";\n\n  return errors;\n}\n//const mapDispatchToProps = ({ postEvent });\n\nexport default connect(null, null)(\n  reduxForm({validate, form: 'eventShowForm'})(EventsShow)\n)\n"]},"metadata":{},"sourceType":"module"}
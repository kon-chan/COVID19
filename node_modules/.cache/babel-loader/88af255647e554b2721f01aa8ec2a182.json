{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/Desktop/reactTest/my-app/src/components/events_new.js\";\nimport React, { Component } from 'react'; //import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom'; // import { postEvent } from '../actions';\n\nclass EventsNew extends React.Component {\n  renderField(field) {\n    const input = field.input,\n          label = field.label,\n          type = field.type,\n          _field$meta = field.meta,\n          touch = _field$meta.touch,\n          error = _field$meta.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, error));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Title\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Body\",\n      name: \"body\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disable: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) error.title = \"Enter a title, Please\";\n  if (!values.body) error.body = \"Enter a body, Please\";\n  return errors;\n}; // const mapDispatchToProps = ({ postEvents });\n\n\nexport default connect(null, null)(reduxForm({\n  validate,\n  form: 'eventNewForm'\n})(EventsNew));","map":{"version":3,"sources":["/Users/konchan/Desktop/reactTest/my-app/src/components/events_new.js"],"names":["React","Component","connect","Field","reduxForm","Link","EventsNew","renderField","field","input","label","type","meta","touch","error","touched","render","validate","values","errors","title","body","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AAGA,MAAMC,SAAN,SAAwBN,KAAK,CAACC,SAA9B,CAAwC;AACtCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA,UACTC,KADS,GACsCD,KADtC,CACTC,KADS;AAAA,UACFC,KADE,GACsCF,KADtC,CACFE,KADE;AAAA,UACKC,IADL,GACsCH,KADtC,CACKG,IADL;AAAA,wBACsCH,KADtC,CACWI,IADX;AAAA,UACmBC,KADnB,eACmBA,KADnB;AAAA,UAC0BC,KAD1B,eAC0BA,KAD1B;AAGjB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,+CAAWL,KAAX;AAAkB,MAAA,WAAW,EAAEC,KAA/B;AAAsC,MAAA,IAAI,EAAEC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEGI,OAAO,IAAID,KAAX,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAP,CAFvB,CADF;AAMD;;AACDE,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,OAA1B;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,SAAS,EAAE,KAAKT,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,SAAS,EAAE,KAAKA,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,OAAO,EAAE,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CARF,CADF;AAeD;;AA5BqC;;AAgCxC,MAAMU,QAAQ,GAAGC,MAAM,IAAI;AACzB,QAAMC,MAAM,GAAG,EAAf;AAEA,MAAI,CAACD,MAAM,CAACE,KAAZ,EAAmBN,KAAK,CAACM,KAAN,GAAc,uBAAd;AACnB,MAAI,CAACF,MAAM,CAACG,IAAZ,EAAkBP,KAAK,CAACO,IAAN,GAAa,sBAAb;AAElB,SAAOF,MAAP;AACD,CAPD,C,CAQA;;;AAEA,eAAejB,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CACbE,SAAS,CAAC;AAACa,EAAAA,QAAD;AAAWK,EAAAA,IAAI,EAAE;AAAjB,CAAD,CAAT,CAA4ChB,SAA5C,CADa,CAAf","sourcesContent":["import React, { Component } from 'react';\n//import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\n\n// import { postEvent } from '../actions';\n\n\nclass EventsNew extends React.Component {\n  renderField(field) {\n    const { input, label, type, meta: { touch, error } } = field;\n\n    return (\n      <div>\n        <input {...input} placeholder={label} type={type}/>\n        {touched && error && <span>{error}</span>}\n      </div>\n    );\n  }\n  render() {\n\n    return(\n      <form>\n        <div>\n          <Field label=\"Title\" name=\"title\" type=\"text\" component={this.renderField}/>\n        </div>\n        <div>\n          <Field label=\"Body\" name=\"body\" type=\"text\" component={this.renderField}/>\n        </div>\n\n        <div>\n          <input type=\"submit\" value=\"Submit\" disable={false} />\n          <Link to=\"/\" >Cancel</Link>\n        </div>\n      </form>\n    );\n  }\n}\n\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) error.title = \"Enter a title, Please\";\n  if (!values.body) error.body = \"Enter a body, Please\";\n\n  return errors;\n}\n// const mapDispatchToProps = ({ postEvents });\n\nexport default connect(null, null)(\n  reduxForm({validate, form: 'eventNewForm'})(EventsNew)\n)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/COVID19/src/components/Search.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Loading from './Loading';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datas: []\n    };\n    this.func = this.func.bind(this);\n    const request = axios.create({\n      baseURL: 'https://coronavirus-19-api.herokuapp.com'\n    });\n    request.get('/countries').then(res => {\n      this.setState({\n        datas: res.data\n      });\n    });\n  }\n\n  func(countryName) {\n    this.props.setCountry(countryName);\n  }\n\n  render() {\n    console.log(this.state.datas.country);\n    const countryList = [{\n      country: 'Russia'\n    }, {\n      country: 'Australia'\n    }, {\n      country: 'Norway'\n    }, {\n      country: 'Ireland'\n    }, {\n      country: 'Czechia'\n    }, {\n      country: 'Chile'\n    }, {\n      country: 'India'\n    }, {\n      country: 'Denmark'\n    }, {\n      country: 'Poland'\n    }, {\n      country: 'Romania'\n    }, {\n      country: 'Japan'\n    }, {\n      country: 'Pakistan'\n    }, {\n      country: 'Malaysia'\n    }, {\n      country: 'Ecuador'\n    }, {\n      country: 'Philippines'\n    }, {\n      country: 'Luxembourg'\n    }, {\n      country: 'Saudi Arabia'\n    }, {\n      country: 'Peru'\n    }, {\n      country: 'Indonesia'\n    }, {\n      country: 'Mexico'\n    }, {\n      country: 'Thailand'\n    }, {\n      country: 'Serbia'\n    }, {\n      country: 'Finland'\n    }, {\n      country: 'Panama'\n    }, {\n      country: 'UAE'\n    }, {\n      country: 'Qatar'\n    }, {\n      country: 'Dominican Republic'\n    }, {\n      country: 'Greece'\n    }, {\n      country: 'South Africa'\n    }, {\n      country: 'Argentina'\n    }, {\n      country: 'Colombia'\n    }, {\n      country: 'Iceland'\n    }, {\n      country: 'Algeria'\n    }, {\n      country: 'Singapore'\n    }, {\n      country: 'Egypt'\n    }, {\n      country: 'Ukraine'\n    }, {\n      country: 'Croatia'\n    }, {\n      country: 'New Zealand'\n    }, {\n      country: 'Morocco'\n    }, {\n      country: 'Estonia'\n    }, {\n      country: 'Iraq'\n    }, {\n      country: 'Slovenia'\n    }, {\n      country: 'Moldova'\n    }, {\n      country: 'Hong Kong'\n    }, {\n      country: 'Lithuania'\n    }, {\n      country: 'Armenia'\n    }, {\n      country: 'Hungary'\n    }, {\n      country: 'Bahrain'\n    }, {\n      country: 'Diamond Princess'\n    }, {\n      country: 'Belarus'\n    }, {\n      country: 'Bosnia and Herzegovina'\n    }, {\n      country: 'Kazakhstan'\n    }, {\n      country: 'Kuwait'\n    }, {\n      country: 'Cameroon'\n    }, {\n      country: 'Azerbaijan'\n    }, {\n      country: 'Tunisia'\n    }, {\n      country: 'North Macedonia'\n    }, {\n      country: 'Bulgaria'\n    }, {\n      country: 'Latvia'\n    }, {\n      country: 'Lebanon'\n    }, {\n      country: 'Slovakia'\n    }, {\n      country: 'Andorra'\n    }, {\n      country: 'Costa Rica'\n    }, {\n      country: 'Cyprus'\n    }, {\n      country: 'Uzbekistan'\n    }, {\n      country: 'Afghanistan'\n    }, {\n      country: 'Uruguay'\n    }, {\n      country: 'Albania'\n    }, {\n      country: 'Taiwan'\n    }, {\n      country: 'Burkina Faso'\n    }, {\n      country: 'Cuba'\n    }, {\n      country: 'Jordan'\n    }, {\n      country: 'Réunion'\n    }, {\n      country: 'Oman'\n    }, {\n      country: 'Channel Islands'\n    }, {\n      country: 'Ivory Coast'\n    }, {\n      country: 'Honduras'\n    }, {\n      country: 'Ghana'\n    }, {\n      country: 'San Marino'\n    }, {\n      country: 'Palestine'\n    }, {\n      country: 'Niger'\n    }, {\n      country: 'Vietnam'\n    }, {\n      country: 'Mauritius'\n    }, {\n      country: 'Malta'\n    }, {\n      country: 'Nigeria'\n    }, {\n      country: 'Montenegro'\n    }, {\n      country: 'Kyrgyzstan'\n    }, {\n      country: 'Senegal'\n    }, {\n      country: 'Bolivia'\n    }, {\n      country: 'Georgia'\n    }, {\n      country: 'Faeroe Islands'\n    }, {\n      country: 'Sri Lanka'\n    }, {\n      country: 'Venezuela'\n    }, {\n      country: 'Mayotte'\n    }, {\n      country: 'DRC'\n    }, {\n      country: 'Kenya'\n    }, {\n      country: 'Martinique'\n    }, {\n      country: 'Guadeloupe'\n    }, {\n      country: 'Isle of Man'\n    }, {\n      country: 'Brunei'\n    }, {\n      country: 'Guinea'\n    }, {\n      country: 'Bangladesh'\n    }, {\n      country: 'Paraguay'\n    }, {\n      country: 'Cambodia'\n    }, {\n      country: 'Gibraltar'\n    }, {\n      country: 'Trinidad and Tobago'\n    }, {\n      country: 'Rwanda'\n    }, {\n      country: 'Djibouti'\n    }, {\n      country: 'Madagascar'\n    }, {\n      country: 'El Salvador'\n    }, {\n      country: 'Liechtenstein'\n    }, {\n      country: 'Monaco'\n    }, {\n      country: 'Guatemala'\n    }, {\n      country: 'French Guiana'\n    }, {\n      country: 'Aruba'\n    }, {\n      country: 'Barbados'\n    }, {\n      country: 'Jamaica'\n    }, {\n      country: 'Togo'\n    }, {\n      country: 'Uganda'\n    }, {\n      country: 'Mali'\n    }, {\n      country: 'Congo'\n    }, {\n      country: 'Ethiopia'\n    }, {\n      country: 'Macao'\n    }, {\n      country: 'French Polynesia'\n    }, {\n      country: 'Bermuda'\n    }, {\n      country: 'Cayman Islands'\n    }, {\n      country: 'Zambia'\n    }, {\n      country: 'Sint Maarten'\n    }, {\n      country: 'Bahamas'\n    }, {\n      country: 'Saint Martin'\n    }, {\n      country: 'Guyana'\n    }, {\n      country: 'Eritrea'\n    }, {\n      country: 'Benin'\n    }, {\n      country: 'Gabon'\n    }, {\n      country: 'Haiti'\n    }, {\n      country: 'Tanzania'\n    }, {\n      country: 'Myanmar'\n    }, {\n      country: 'Syria'\n    }, {\n      country: 'Libya'\n    }, {\n      country: 'Maldives'\n    }, {\n      country: 'Guinea-Bissau'\n    }, {\n      country: 'New Caledonia'\n    }, {\n      country: 'Angola'\n    }, {\n      country: 'Equatorial Guinea'\n    }, {\n      country: 'Namibia'\n    }, {\n      country: 'Antigua and Barbuda'\n    }, {\n      country: 'Dominica'\n    }, {\n      country: 'Fiji'\n    }, {\n      country: 'Mongolia'\n    }, {\n      country: 'Liberia'\n    }, {\n      country: 'Saint Lucia'\n    }, {\n      country: 'Curaçao'\n    }, {\n      country: 'Sudan'\n    }, {\n      country: 'Grenada'\n    }, {\n      country: 'Laos'\n    }, {\n      country: 'Greenland'\n    }, {\n      country: 'Seychelles'\n    }, {\n      country: 'Suriname'\n    }, {\n      country: 'Zimbabwe'\n    }, {\n      country: 'Mozambique'\n    }, {\n      country: 'Saint Kitts and Nevis'\n    }, {\n      country: 'Eswatini'\n    }, {\n      country: 'MS Zaandam'\n    }, {\n      country: 'Nepal'\n    }, {\n      country: 'Chad'\n    }, {\n      country: 'Turks and Caicos'\n    }, {\n      country: 'CAR'\n    }, {\n      country: 'Belize'\n    }, {\n      country: 'Cabo Verde'\n    }, {\n      country: 'Vatican City'\n    }, {\n      country: 'St. Vincent Grenadines'\n    }, {\n      country: 'Somalia'\n    }, {\n      country: 'Botswana'\n    }, {\n      country: 'Mauritania'\n    }, {\n      country: 'Nicaragua'\n    }, {\n      country: 'Montserrat'\n    }, {\n      country: 'St. Barth'\n    }, {\n      country: 'Sierra Leone'\n    }, {\n      country: 'Bhutan'\n    }, {\n      country: 'Malawi'\n    }, {\n      country: 'Gambia'\n    }, {\n      country: 'Sao Tome and Principe'\n    }, {\n      country: 'Western Sahara'\n    }, {\n      country: 'Anguilla'\n    }, {\n      country: 'British Virgin Islands'\n    }, {\n      country: 'Burundi'\n    }, {\n      country: 'Caribbean Netherlands'\n    }, {\n      country: 'Falkland Islands'\n    }, {\n      country: 'Papua New Guinea'\n    }, {\n      country: 'Saint Pierre Miquelon'\n    }, {\n      country: 'South Sudan'\n    }, {\n      country: 'Timor-Leste'\n    }, {\n      country: 'China'\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }, countryList.map(info => /*#__PURE__*/React.createElement(Button, {\n      key: info.country,\n      onClick: this.func.bind(this, info.country),\n      variant: \"outlined\",\n      color: \"primary\",\n      style: {\n        margin: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, info.country)));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/konchan/works/COVID19/src/components/Search.js"],"names":["React","axios","Button","Loading","Search","Component","constructor","props","state","datas","func","bind","request","create","baseURL","get","then","res","setState","data","countryName","setCountry","render","console","log","country","countryList","map","info","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\nimport Loading from './Loading';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datas: [],\n    }\n    this.func = this.func.bind(this);\n    const request = axios.create({\n      baseURL: 'https://coronavirus-19-api.herokuapp.com'\n    })\n    request.get('/countries')\n    .then(res => {\n      this.setState({\n        datas: res.data,\n      });\n    })\n  }\n\n  func(countryName) {\n    this.props.setCountry(countryName);\n  }\n\n  render() {\n    console.log(this.state.datas.country);\n\n    const countryList = [\n      {country: 'Russia'},\n      {country: 'Australia'},\n      {country: 'Norway'},\n      {country: 'Ireland'},\n      {country: 'Czechia'},\n      {country: 'Chile'},\n      {country: 'India'},\n      {country: 'Denmark'},\n      {country: 'Poland'},\n      {country: 'Romania'},\n      {country: 'Japan'},\n      {country: 'Pakistan'},\n      {country: 'Malaysia'},\n      {country: 'Ecuador'},\n      {country: 'Philippines'},\n      {country: 'Luxembourg'},\n      {country: 'Saudi Arabia'},\n      {country: 'Peru'},\n      {country: 'Indonesia'},\n      {country: 'Mexico'},\n      {country: 'Thailand'},\n      {country: 'Serbia'},\n      {country: 'Finland'},\n      {country: 'Panama'},\n      {country: 'UAE'},\n      {country: 'Qatar'},\n      {country: 'Dominican Republic'},\n      {country: 'Greece'},\n      {country: 'South Africa'},\n      {country: 'Argentina'},\n      {country: 'Colombia'},\n      {country: 'Iceland'},\n      {country: 'Algeria'},\n      {country: 'Singapore'},\n      {country: 'Egypt'},\n      {country: 'Ukraine'},\n      {country: 'Croatia'},\n      {country: 'New Zealand'},\n      {country: 'Morocco'},\n      {country: 'Estonia'},\n      {country: 'Iraq'},\n      {country: 'Slovenia'},\n      {country: 'Moldova'},\n      {country: 'Hong Kong'},\n      {country: 'Lithuania'},\n      {country: 'Armenia'},\n      {country: 'Hungary'},\n      {country: 'Bahrain'},\n      {country: 'Diamond Princess'},\n      {country: 'Belarus'},\n      {country: 'Bosnia and Herzegovina'},\n      {country: 'Kazakhstan'},\n      {country: 'Kuwait'},\n      {country: 'Cameroon'},\n      {country: 'Azerbaijan'},\n      {country: 'Tunisia'},\n      {country: 'North Macedonia'},\n      {country: 'Bulgaria'},\n      {country: 'Latvia'},\n      {country: 'Lebanon'},\n      {country: 'Slovakia'},\n      {country: 'Andorra'},\n      {country: 'Costa Rica'},\n      {country: 'Cyprus'},\n      {country: 'Uzbekistan'},\n      {country: 'Afghanistan'},\n      {country: 'Uruguay'},\n      {country: 'Albania'},\n      {country: 'Taiwan'},\n      {country: 'Burkina Faso'},\n      {country: 'Cuba'},\n      {country: 'Jordan'},\n      {country: 'Réunion'},\n      {country: 'Oman'},\n      {country: 'Channel Islands'},\n      {country: 'Ivory Coast'},\n      {country: 'Honduras'},\n      {country: 'Ghana'},\n      {country: 'San Marino'},\n      {country: 'Palestine'},\n      {country: 'Niger'},\n      {country: 'Vietnam'},\n      {country: 'Mauritius'},\n      {country: 'Malta'},\n      {country: 'Nigeria'},\n      {country: 'Montenegro'},\n      {country: 'Kyrgyzstan'},\n      {country: 'Senegal'},\n      {country: 'Bolivia'},\n      {country: 'Georgia'},\n      {country: 'Faeroe Islands'},\n      {country: 'Sri Lanka'},\n      {country: 'Venezuela'},\n      {country: 'Mayotte'},\n      {country: 'DRC'},\n      {country: 'Kenya'},\n      {country: 'Martinique'},\n      {country: 'Guadeloupe'},\n      {country: 'Isle of Man'},\n      {country: 'Brunei'},\n      {country: 'Guinea'},\n      {country: 'Bangladesh'},\n      {country: 'Paraguay'},\n      {country: 'Cambodia'},\n      {country: 'Gibraltar'},\n      {country: 'Trinidad and Tobago'},\n      {country: 'Rwanda'},\n      {country: 'Djibouti'},\n      {country: 'Madagascar'},\n      {country: 'El Salvador'},\n      {country: 'Liechtenstein'},\n      {country: 'Monaco'},\n      {country: 'Guatemala'},\n      {country: 'French Guiana'},\n      {country: 'Aruba'},\n      {country: 'Barbados'},\n      {country: 'Jamaica'},\n      {country: 'Togo'},\n      {country: 'Uganda'},\n      {country: 'Mali'},\n      {country: 'Congo'},\n      {country: 'Ethiopia'},\n      {country: 'Macao'},\n      {country: 'French Polynesia'},\n      {country: 'Bermuda'},\n      {country: 'Cayman Islands'},\n      {country: 'Zambia'},\n      {country: 'Sint Maarten'},\n      {country: 'Bahamas'},\n      {country: 'Saint Martin'},\n      {country: 'Guyana'},\n      {country: 'Eritrea'},\n      {country: 'Benin'},\n      {country: 'Gabon'},\n      {country: 'Haiti'},\n      {country: 'Tanzania'},\n      {country: 'Myanmar'},\n      {country: 'Syria'},\n      {country: 'Libya'},\n      {country: 'Maldives'},\n      {country: 'Guinea-Bissau'},\n      {country: 'New Caledonia'},\n      {country: 'Angola'},\n      {country: 'Equatorial Guinea'},\n      {country: 'Namibia'},\n      {country: 'Antigua and Barbuda'},\n      {country: 'Dominica'},\n      {country: 'Fiji'},\n      {country: 'Mongolia'},\n      {country: 'Liberia'},\n      {country: 'Saint Lucia'},\n      {country: 'Curaçao'},\n      {country: 'Sudan'},\n      {country: 'Grenada'},\n      {country: 'Laos'},\n      {country: 'Greenland'},\n      {country: 'Seychelles'},\n      {country: 'Suriname'},\n      {country: 'Zimbabwe'},\n      {country: 'Mozambique'},\n      {country: 'Saint Kitts and Nevis'},\n      {country: 'Eswatini'},\n      {country: 'MS Zaandam'},\n      {country: 'Nepal'},\n      {country: 'Chad'},\n      {country: 'Turks and Caicos'},\n      {country: 'CAR'},\n      {country: 'Belize'},\n      {country: 'Cabo Verde'},\n      {country: 'Vatican City'},\n      {country: 'St. Vincent Grenadines'},\n      {country: 'Somalia'},\n      {country: 'Botswana'},\n      {country: 'Mauritania'},\n      {country: 'Nicaragua'},\n      {country: 'Montserrat'},\n      {country: 'St. Barth'},\n      {country: 'Sierra Leone'},\n      {country: 'Bhutan'},\n      {country: 'Malawi'},\n      {country: 'Gambia'},\n      {country: 'Sao Tome and Principe'},\n      {country: 'Western Sahara'},\n      {country: 'Anguilla'},\n      {country: 'British Virgin Islands'},\n      {country: 'Burundi'},\n      {country: 'Caribbean Netherlands'},\n      {country: 'Falkland Islands'},\n      {country: 'Papua New Guinea'},\n      {country: 'Saint Pierre Miquelon'},\n      {country: 'South Sudan'},\n      {country: 'Timor-Leste'},\n      {country: 'China'}\n    ]\n\n    return (\n      <React.Fragment>\n        {countryList.map(info => (\n          <Button\n            key={info.country}\n            onClick={this.func.bind(this, info.country)}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{margin: 5}}\n          >\n            {info.country}\n          </Button>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// https://github.com/axios/axios\n// プロミスベースのHTTPクライアントです。\n// 2019年5月時点で5万8千のスターが付いている有名なパッケージです。\nimport axios from 'axios';\nexport const READ_EVENTS = 'READ_EVENTS';\nexport const READ_EVENT = 'READ_EVENT';\nexport const CREATE_EVENT = 'CREATE_EVENT';\nexport const UPDATE_EVENT = 'UPDATE_EVENT';\nexport const DELETE_EVENT = 'DELETE_EVENT';\nconst ROOT_URL = 'https://udemy-utils.herokuapp.com/api/v1';\nconst QUERYSTRING = '?token=token123'; // 以下に列挙する関数は全てAction Creatorsです。\n// 通常だと、Action CreatorsはActionをreturnしなければいけませんが\n// redux-thunkを導入することでActionの代わりに関数をreturnすることができるようになります。\n// 以下のAction Creators全ては関数を返します。\n//\n// axiosは非同期処理です。\n\nexport const readEvents = () => async dispatch => {\n  const response = await axios.get(\"\".concat(ROOT_URL, \"/events\").concat(QUERYSTRING));\n  dispatch({\n    type: READ_EVENTS,\n    response\n  });\n};\nexport const postEvent = values => async dispatch => {\n  const response = await axios.post(\"\".concat(ROOT_URL, \"/events\").concat(QUERYSTRING), values);\n  dispatch({\n    type: CREATE_EVENT,\n    response\n  });\n};\nexport const putEvent = values => async dispatch => {\n  const response = await axios.put(\"\".concat(ROOT_URL, \"/events/\").concat(values.id).concat(QUERYSTRING), values);\n  dispatch({\n    type: UPDATE_EVENT,\n    response\n  });\n};\nexport const getEvent = id => async dispatch => {\n  const response = await axios.get(\"\".concat(ROOT_URL, \"/events/\").concat(id).concat(QUERYSTRING));\n  dispatch({\n    type: READ_EVENT,\n    response\n  });\n};\nexport const deleteEvent = id => async dispatch => {\n  await axios.delete(\"\".concat(ROOT_URL, \"/events/\").concat(id).concat(QUERYSTRING));\n  dispatch({\n    type: DELETE_EVENT,\n    id\n  });\n};","map":{"version":3,"sources":["/Users/konchan/Desktop/reactTest/my-app/src/actions/index.js"],"names":["axios","READ_EVENTS","READ_EVENT","CREATE_EVENT","UPDATE_EVENT","DELETE_EVENT","ROOT_URL","QUERYSTRING","readEvents","dispatch","response","get","type","postEvent","values","post","putEvent","put","id","getEvent","deleteEvent","delete"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,MAAMC,QAAQ,GAAG,0CAAjB;AACA,MAAMC,WAAW,GAAG,iBAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,WAAaL,QAAb,oBAA+BC,WAA/B,EAAvB;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEX,WAAR;AAAqBS,IAAAA;AAArB,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMG,SAAS,GAAGC,MAAM,IAAI,MAAML,QAAN,IAAkB;AACnD,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACe,IAAN,WAAcT,QAAd,oBAAgCC,WAAhC,GAA+CO,MAA/C,CAAvB;AACAL,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAET,YAAR;AAAsBO,IAAAA;AAAtB,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMM,QAAQ,GAAGF,MAAM,IAAI,MAAML,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACiB,GAAN,WAAaX,QAAb,qBAAgCQ,MAAM,CAACI,EAAvC,SAA4CX,WAA5C,GAA2DO,MAA3D,CAAvB;AACAL,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER,YAAR;AAAsBM,IAAAA;AAAtB,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMS,QAAQ,GAAGD,EAAE,IAAI,MAAMT,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,WAAaL,QAAb,qBAAgCY,EAAhC,SAAqCX,WAArC,EAAvB;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEV,UAAR;AAAoBQ,IAAAA;AAApB,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMU,WAAW,GAAGF,EAAE,IAAI,MAAMT,QAAN,IAAkB;AACjD,QAAMT,KAAK,CAACqB,MAAN,WAAgBf,QAAhB,qBAAmCY,EAAnC,SAAwCX,WAAxC,EAAN;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEP,YAAR;AAAsBa,IAAAA;AAAtB,GAAD,CAAR;AACD,CAHM","sourcesContent":["// https://github.com/axios/axios\n// プロミスベースのHTTPクライアントです。\n// 2019年5月時点で5万8千のスターが付いている有名なパッケージです。\nimport axios from 'axios'\n\nexport const READ_EVENTS = 'READ_EVENTS'\nexport const READ_EVENT = 'READ_EVENT'\nexport const CREATE_EVENT = 'CREATE_EVENT'\nexport const UPDATE_EVENT = 'UPDATE_EVENT'\nexport const DELETE_EVENT = 'DELETE_EVENT'\n\nconst ROOT_URL = 'https://udemy-utils.herokuapp.com/api/v1'\nconst QUERYSTRING = '?token=token123'\n\n// 以下に列挙する関数は全てAction Creatorsです。\n// 通常だと、Action CreatorsはActionをreturnしなければいけませんが\n// redux-thunkを導入することでActionの代わりに関数をreturnすることができるようになります。\n// 以下のAction Creators全ては関数を返します。\n//\n// axiosは非同期処理です。\nexport const readEvents = () => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/events${QUERYSTRING}`)\n  dispatch({ type: READ_EVENTS, response })\n}\n\nexport const postEvent = values => async dispatch => {\n  const response = await axios.post(`${ROOT_URL}/events${QUERYSTRING}`, values)\n  dispatch({ type: CREATE_EVENT, response })\n}\n\nexport const putEvent = values => async dispatch => {\n  const response = await axios.put(`${ROOT_URL}/events/${values.id}${QUERYSTRING}`, values)\n  dispatch({ type: UPDATE_EVENT, response })\n}\n\nexport const getEvent = id => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/events/${id}${QUERYSTRING}`)\n  dispatch({ type: READ_EVENT, response })\n}\n\nexport const deleteEvent = id => async dispatch => {\n  await axios.delete(`${ROOT_URL}/events/${id}${QUERYSTRING}`)\n  dispatch({ type: DELETE_EVENT, id })\n}\n"]},"metadata":{},"sourceType":"module"}